자바의 컬렉션 프레임 워크 (동적인 배열)
--> 배열은 자료형이 같은 기억 장소의 모임이며
많은 양의 데이터를 처리하기에 적합합니다.
그러나 배열에는 자료형이 같아야 하고
또, 배열의 크기를 미리 정해야 하므로 용량이 부족하거나
혹은 낭비가 되는 경우가 있다.
그리고 배열의 중간에 데이터를 추가하거나 삭제할 때 상당히
번거로운 작업이 됩니다.

그래서 자바에서는 이러한 배열의 단점을 보완하기 위하여
동적인 배열 즉 컬렉션 프레임워크를 만들어 두었습니다.

===============================================
<<컬렉션 프레임 워크의 종류 >>
1. Set : 데이터의 중복을 허용하지 않아요.
    - HashSet : 입력한 순서를 유지하지 않아요
    - LinkedHashSet : 입력한 순서를 유지합니다.
    - TreeSet : 데이터를 정렬해줍니다.

2. List : 데이터의 중복을 허용합니다.
    - ArrayList : 자바의 컬렉션 중에서 가장 많이 사용합니다.
    - LinkedList : 데이터 중간에 추가 삭제가 빈번한 경우에 사용하면 ArrayList
3. Map : 키와 값이 한 쌍으로 존재합니다.(단 자료형이 같아야 합니다.)
==> 딕셔너리타입
================================================
interface A {}
interface B extends A{}
================================================
인터페이스를 구현하는 클래스를 만들 때는 implements
인터페이스를 상복받은 인터페이스를 만들 때는 extends
================================================
Set
All Superinterfaces:
Collection<E>, Iterable<E>
interface Set extends Collection, Iterable{}
===================================
NavigableSet<E>, SortedSet<E>
interface NavigableSet<E> extends Set{}
interface SortedSet<E> extends Set{}

class HashSet implements Set{}
class TreeSet implements Set{}
class LinkedHashSet implements Set{}

부모의 객체가 자식의 객체를 참조할 수 있으므로 Set를 선언한 후 자식객체를 선언할 수 있다.


